'''
Отсортируйте по убыванию методом пузырька одномерный целочисленный массив,
заданный случайными числами на промежутке [-100; 100).
Выведите на экран исходный и отсортированный массивы.
'''
# Скорее всего можно добавить сортировку больших чисел, если они попадаются в начале исходного массива,
#  чтобы они (если отсортированны), не попадали в очередную итерацию.
# Но тогда, вероятнее всего, это уже не метод пузырька.
import random

BIGNESS = 10
BEGIN = -100
END = 100

def bubble(arr_):
    n = 0
    while n < len(arr_):
        for i in range(len(arr_) - 1 - n):  # - n убирает пооследний отсеянный "пузырёк" из итерации
            #print(f'Сравниваем элемент {arr_[i]} с элементом {arr_[i + 1]}')  # для наглядности отсева
            if arr_[i] < arr_[i + 1]:
                arr_[i], arr_[i + 1] = arr_[i + 1], arr_[i]
        n += 1
        #print(arr_)  # Массив после каждой итерации
    return arr_

array = [random.randint(BEGIN, END) for _ in range(BIGNESS)]
print(f'Исходный массив - {array}')

bub_ar = bubble(array)
print(f'Отсортированный массив - {bub_ar}')


